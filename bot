import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from aiogram import F
from aiogram.filters import Command  # –§–∏–ª—å—Ç—Ä –¥–ª—è –∫–æ–º–∞–Ω–¥

API_TOKEN = '7128647237:AAFHJ3r-4VSlo9NRHo6Mg-33s0iNgyLks6Q'

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É", callback_data="open_card")],
            [InlineKeyboardButton(text="–ü—Ä–æ–¥–∞—Ç—å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç—É", callback_data="sell_card")],
            [InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", callback_data="info")]
        ]
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! üëã\n–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –≤–∞—à —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫. –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ:\n\n"
        "–£–∑–Ω–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\n"
        "–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É –û–¢–ü –ë–∞–Ω–∫–∞.\n"
        "–ü—Ä–æ–¥–∞—Ç—å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç—É.\n"
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ. ‚úÖ",
        reply_markup=keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline –∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def handle_callback(callback: CallbackQuery):
    if callback.data == "open_card":
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Ä—Ç—É"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue_application")],
                [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="go_back")]
            ]
        )
        await callback.message.reply(
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –û–¢–ü –∫–∞—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞ –∏ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –ø—Ä–æ–ø–∏—Å–∫–æ–π –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞ (5-—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞).\n\n"
            "–ö–∞—Ä—Ç—ã –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è –Ω–∞ –ª–∏—Ü–∞ –æ—Ç 18-—Ç–∏ –ª–µ—Ç –∏ –æ—Ñ–æ—Ä–º–ª—è—é—Ç—Å—è –Ω–∞ —É–∂–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—ã–µ —Å–∏–º-–∫–∞—Ä—Ç—ã - –æ—Ç –≤–∞—Å —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É —É –Ω–∞—à–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –µ–µ –Ω–∞–º. "
            "–ï—Å–ª–∏ —É –≤–∞—Å –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Å–¥–µ–ª–∫–µ - –ø–æ–ª—É—á–∏—Ç–µ —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ 3 –∫–Ω–æ–ø–∫–µ –±–æ—Ç–∞.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard
        )

    elif callback.data == "sell_card":
        # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—É—é –∫–∞—Ä—Ç—É"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="go_back")],
                [InlineKeyboardButton(text="–°–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª", callback_data="info")]
            ]
        )
        await callback.message.reply(
            "–î–ª—è –ø—Ä–æ–¥–∞–∂–∏ –æ—Ç–∫—Ä—ã—Ç–æ–π –∫–∞—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –ø–ª–∞—Å—Ç–∏–∫–æ–≤—É—é –∫–∞—Ä—Ç—É –û–¢–ü –ë–∞–Ω–∫–∞, –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è –æ –≤—Å—Ç—Ä–µ—á–µ —Å @joniboni_11 –∏ –∏–º–µ—Ç—å –ø—Ä–∏ —Å–µ–±–µ –æ—Ä–∏–≥–∏–Ω–∞–ª –ø–∞—Å–ø–æ—Ä—Ç–∞, SIM-–∫–∞—Ä—Ç—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∞ –±–∞–Ω–∫–∞, –∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.\n\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å –∏–º–µ—é—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã ‚Äî –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard
        )

    elif callback.data == "info":
        # –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
        keyboard = InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="go_back")]
            ]
        )
        await callback.message.reply(
            "–û–¢–ü –ë–∞–Ω–∫ –≤—Ö–æ–¥–∏—Ç –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é –ì—Ä—É–ø–ø—É –û–¢–ü (OTP Group), –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ª–∏–¥–µ—Ä–æ–≤ —Ä—ã–Ω–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —É—Å–ª—É–≥ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–π –∏ –í–æ—Å—Ç–æ—á–Ω–æ–π –ï–≤—Ä–æ–ø—ã.\n\n"
            "–ú—ã –ø–æ–∫—É–ø–∞–µ–º –∫–∞—Ä—Ç—ã –≤ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ, –∫–∞–∫ –≤ —Ä–æ–∑–Ω–∏—Ü—É, —Ç–∞–∫ –∏ –æ–ø—Ç–æ–º.\n\n"
            "–ö—Ä–∏—Ç–µ—Ä–∏–∏ –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∫–∞—Ä—Ç—ã:\n"
            "–í–æ–∑—Ä–∞—Å—Ç –æ—Ç 18 –ª–µ—Ç.\n"
            "–ù–∞–ª–∏—á–∏–µ –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –ø–∞—Å–ø–æ—Ä—Ç–∞.\n"
            "–ö–∞—Ä—Ç–∞ –¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –≤ –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç–∏—è —Å –ø–æ–º–æ—â—å—é –Ω–∞—à–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π, —Ç–∞–∫ –∫–∞–∫ –∫–∞—Ä—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –æ—Ç–¥–µ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.\n"
            "–¶–µ–Ω–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ: 4.000 —Ä—É–±–ª–µ–π.\n"
            "---\n"
            "–ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç–∞—è –∫–∞—Ä—Ç–∞, –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–æ–¥–∞–∂–∏ –≤–∫–ª—é—á–∞–µ—Ç –ø–µ—Ä–µ–¥–∞—á—É –∫–∞—Ä—Ç—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–º—É –ª–∏—Ü—É —Å –ø–µ—Ä–µ–ø—Ä–∏–≤—è–∑–∫–æ–π –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ SIM-–∫–∞—Ä—Ç–∞ –∏ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.\n"
            "–î–æ—Å—Ç–∞–≤–∫–∞ –∫–∞—Ä—Ç—ã –±–µ–∑ –∫—É—Ä—å–µ—Ä–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 2 –Ω–µ–¥–µ–ª—å. –û–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –¥–Ω—è (–≤–æ–∑–º–æ–∂–Ω—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è).\n"
            "–¶–µ–Ω–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ: 5.000 —Ä—É–±–ª–µ–π.\n"
            "---\n"
            "–ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º —á–∏—Å—Ç–æ—Ç—É —Å–¥–µ–ª–∫–∏:\n"
            "–ö–∞—Ä—Ç–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫—É –≤ –∞—Ä–±–∏—Ç—Ä–∞–∂–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö —Ä–∏—Å–∫–æ–≤. –ú—ã –Ω–µ —Ä–∞–±–æ—Ç–∞–µ–º —Å —á–µ—Ä–Ω—ã–º –∏–ª–∏ —Å–µ—Ä—ã–º —Ç—Ä–∞—Ñ–∏–∫–æ–º, —á—Ç–æ–±—ã –æ–±–µ–∑–æ–ø–∞—Å–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –∫–∞—Ä—Ç –æ—Ç –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ä–∏—Å–∫–æ–≤.",
            reply_markup=keyboard
        )


# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å" (–¥–ª—è –∞–Ω–∫–µ—Ç—ã)
@dp.callback_query(F.data == "continue_application")
async def continue_application(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ö—Ç–æ —Ç–∞–∫–æ–π –¥—Ä–æ–ø –∏ –¥—Ä–æ–ø–æ–≤–æ–¥?", callback_data="who_is_drop")],
            [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="go_back")]
        ]
    )
    application_form = (
        "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∑–∞—è–≤–∫—É –Ω–∏–∂–µ:\n\n"
        "–§–ò–û: \n"
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥—Ä–æ–ø–∞: \n"
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥—Ä–æ–ø–æ–≤–æ–¥–∞: \n"
        "–õ–∏—Ü–µ–≤–æ–µ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞: \n"
        "–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ø—Ä–æ–ø–∏—Å–∫–∞): \n\n"
        "‚ùó–î–∞–Ω–Ω—É—é –∞–Ω–∫–µ—Ç—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤ –¥–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–∞–∫—Ç - @joniboni_11\n"
        "–ë–æ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–µ—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.\n"
        "–ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∞–Ω–∫–µ—Ç—ã –≤ –¥–∞–Ω–Ω—ã–π —á–∞—Ç - –∑–∞—è–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∞–Ω–Ω—É–ª–∏—Ä—É–µ—Ç—Å—è.\n"
        "–§–æ—Ä–º–∞ –∞–Ω–∫–µ—Ç—ã (–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –Ω–∏–∂–µ):\n"
        "–§–ò–û:\n"
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥—Ä–æ–ø–∞:\n"
        "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥—Ä–æ–ø–æ–≤–æ–¥–∞:\n"
        "–õ–∏—Ü–µ–≤–æ–µ —Ñ–æ—Ç–æ –ø–∞—Å–ø–æ—Ä—Ç–∞:\n"
        "–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ø—Ä–æ–ø–∏—Å–∫–∞):\n"
    )
    await callback.message.reply(application_form, reply_markup=keyboard)


# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥—Ä–æ–ø–µ –∏ –¥—Ä–æ–ø–æ–≤–æ–¥–µ
@dp.callback_query(F.data == "who_is_drop")
async def who_is_drop(callback: CallbackQuery):
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="go_back")]
        ]
    )
    await callback.message.reply(
        "‚úÖ **–î—Ä–æ–ø** ‚Äî —ç—Ç–æ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã), –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω–µ—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.\n\n"
        "‚úÖ **–î—Ä–æ–ø–æ–≤–æ–¥** ‚Äî —ç—Ç–æ –ª–∏—Ü–æ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –¥—Ä–æ–ø—É –≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.\n\n"
        "–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã, –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥ –∏–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –∫–∞—Ä—Ç—ã.",
        reply_markup=keyboard
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"
@dp.callback_query(F.data == "go_back")
async def go_back(callback: CallbackQuery):
    await start_command(callback.message)  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é


if __name__ == '__main__':
    # –ò—Å–ø—Ä–∞–≤–∏–ª–∏ –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É –±–æ—Ç–∞ —è–≤–Ω–æ –≤ run_polling
    dp.run_polling(bot, skip_updates=True)
